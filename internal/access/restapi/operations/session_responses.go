// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/relay/internal/access/models"
)

// SessionOKCode is the HTTP code returned for type SessionOK
const SessionOKCode int = 200

/*SessionOK session o k

swagger:response sessionOK
*/
type SessionOK struct {

	/*
	  In: Body
	*/
	Payload *SessionOKBody `json:"body,omitempty"`
}

// NewSessionOK creates SessionOK with default headers values
func NewSessionOK() *SessionOK {

	return &SessionOK{}
}

// WithPayload adds the payload to the session o k response
func (o *SessionOK) WithPayload(payload *SessionOKBody) *SessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session o k response
func (o *SessionOK) SetPayload(payload *SessionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SessionBadRequestCode is the HTTP code returned for type SessionBadRequest
const SessionBadRequestCode int = 400

/*SessionBadRequest BadRequest

swagger:response sessionBadRequest
*/
type SessionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSessionBadRequest creates SessionBadRequest with default headers values
func NewSessionBadRequest() *SessionBadRequest {

	return &SessionBadRequest{}
}

// WithPayload adds the payload to the session bad request response
func (o *SessionBadRequest) WithPayload(payload *models.Error) *SessionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session bad request response
func (o *SessionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SessionUnauthorizedCode is the HTTP code returned for type SessionUnauthorized
const SessionUnauthorizedCode int = 401

/*SessionUnauthorized Unauthorized

swagger:response sessionUnauthorized
*/
type SessionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewSessionUnauthorized creates SessionUnauthorized with default headers values
func NewSessionUnauthorized() *SessionUnauthorized {

	return &SessionUnauthorized{}
}

// WithPayload adds the payload to the session unauthorized response
func (o *SessionUnauthorized) WithPayload(payload interface{}) *SessionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session unauthorized response
func (o *SessionUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
