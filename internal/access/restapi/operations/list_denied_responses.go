// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/practable/relay/internal/access/models"
)

// ListDeniedOKCode is the HTTP code returned for type ListDeniedOK
const ListDeniedOKCode int = 200

/*ListDeniedOK List of current denied bids

swagger:response listDeniedOK
*/
type ListDeniedOK struct {

	/*
	  In: Body
	*/
	Payload *models.BookingIDs `json:"body,omitempty"`
}

// NewListDeniedOK creates ListDeniedOK with default headers values
func NewListDeniedOK() *ListDeniedOK {

	return &ListDeniedOK{}
}

// WithPayload adds the payload to the list denied o k response
func (o *ListDeniedOK) WithPayload(payload *models.BookingIDs) *ListDeniedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list denied o k response
func (o *ListDeniedOK) SetPayload(payload *models.BookingIDs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDeniedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListDeniedUnauthorizedCode is the HTTP code returned for type ListDeniedUnauthorized
const ListDeniedUnauthorizedCode int = 401

/*ListDeniedUnauthorized Unauthorized

swagger:response listDeniedUnauthorized
*/
type ListDeniedUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListDeniedUnauthorized creates ListDeniedUnauthorized with default headers values
func NewListDeniedUnauthorized() *ListDeniedUnauthorized {

	return &ListDeniedUnauthorized{}
}

// WithPayload adds the payload to the list denied unauthorized response
func (o *ListDeniedUnauthorized) WithPayload(payload interface{}) *ListDeniedUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list denied unauthorized response
func (o *ListDeniedUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListDeniedUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
